@* 
  Component: MainLayout
  Description: This component serves as the main layout for the application. It dynamically adjusts the navigation menu 
  based on the current route and manages the theme of the application using ThemeService.

  Usage:
  - The layout dynamically renders `NavMenuMemes` when the user navigates to "/memes2", otherwise, it renders the default `NavMenu`.
  - It contains a top row with a dark mode toggle and an external link to ASP.NET Core documentation.
  - The main content of the page is displayed within an `<article>` tag which dynamically updates based on the routed page.

  Dependencies:
  - `NavigationManager`: Injected to manage and interact with the navigation state.
  - `ThemeService`: Injected to handle the application's theme settings including initialization of themes during component initialization.

  Code Blocks:
  - `OnInitializedAsync`: An override of the component initialization method to initialize the theme settings asynchronously when the component is first rendered.

  Remarks:
  - The component assumes the existence of `NavMenuMemes` and `NavMenu` components for navigation purposes.
  - `DarkModeToggle` is used here to provide a UI control for switching themes (commented out is `GithubLink`, which can be enabled if needed).
  - External resources like documentation are linked directly in the layout for easy accessibility.

*@
@using keen_manual.Components
@using keen_manual.Layout.Memes2
@using Ravenhill.Data
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject ThemeService ThemeService

<div class="page">
    <div class="sidebar">
        @if (NavigationManager.Uri.Contains("/memes2")) {
            <NavMenuMemes/>
        }
        else {
            <NavMenu/>
        }
    </div>

    <main>
        <div class="top-row px-4">
            <div class="button-container">
                <DarkModeToggle/>
                @* <GithubLink/> *@
            </div>
            <a href="https://www.github.com/r8vnhill" target="_blank">Github</a>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {

    protected override async Task OnInitializedAsync() {
        await ThemeService.InitializeThemeAsync();
    }

}